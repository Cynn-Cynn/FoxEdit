#pragma kernel VoxelGeneration

StructuredBuffer<float3> _VoxelPositions;
StructuredBuffer<int> _FaceIndices;
StructuredBuffer<int> _VoxelIndices;
StructuredBuffer<float4x4> _RotationMatrices;
RWStructuredBuffer<float4x4> _TransformMatrices;

uniform uint _InstanceStartIndex;
uniform uint _InstanceCount;
uniform uint _FrameIndex;
uniform float4x4 _VoxelToWorldMatrix;

[numthreads(64, 1, 1)]
void VoxelGeneration(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _InstanceCount)
        return;
    
    int faceIndex = 0;
    [unroll(5)]
    while (id.x >= _FaceIndices[faceIndex + _FrameIndex * 6])
    {
        faceIndex += 1;
    }
    
    uint instanceID = _InstanceStartIndex + id.x;
    float3 pos = _VoxelPositions[_VoxelIndices[instanceID]] * 0.1f;

    float4x4 objectToVoxelMatrix = float4x4
    (
        1, 0, 0, pos.x,
        0, 1, 0, pos.y + 0.05,
        0, 0, 1, pos.z,
        0, 0, 0, 1
    );
    objectToVoxelMatrix = mul(objectToVoxelMatrix, _RotationMatrices[faceIndex]);
    
    _TransformMatrices[id.x] = mul(_VoxelToWorldMatrix, objectToVoxelMatrix);
}